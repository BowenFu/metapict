#lang racket
(require "def.rkt" pict racket/draw)

(provide save-pict-as-svg)

;; (define (use-a4-paper)
;;   (define setup (new ps-setup%))
;;   (current-ps-setup setup)
;;   (send setup set-paper-name "A4 210 x 297 mm")
;;   ; introduce margins such that the result is centered
;;   (def α 0.9)
;;   (send setup set-margin (/ (* (- 1 α) a4-width) 2) (/ (* (- 1 α) a4-height) 2))
;;   (send setup set-editor-margin 0 0)
;;   (send setup set-scaling α α))

(define (new-svg-dc filename w h)
  ;; (send (current-ps-setup) set-file filename)
  ;; (send (current-ps-setup) set-margin 0 0) 
  ;; (send (current-ps-setup) set-scaling 1 1)
  ;; (send (current-ps-setup) set-translation 0 0)
  ;; (send (current-ps-setup) set-editor-margin 0 0)
  ; (define dc (new pdf-dc% [interactive #f] [parent #f] [use-paper-bbox #t] [as-eps #f] [output #f]))
  (def dc (new svg-dc%  
               [width w] [height h]
               [output filename]))
  (send dc set-smoothing 'smoothed) ; important!
  dc)

(define (start dc)
  (send dc start-doc "Generated by MetaPict")
  (send dc start-page))

(define (end dc)
  (send dc end-page)
  (send dc end-doc))

(define (new-page dc)
  (send dc end-page)
  (send dc start-page))

(define (save-pict-as-svg p filename)
  (def dc (new-svg-dc filename (pict-width p) (pict-height p)))
  (start dc)
  (draw-pict p dc 0 0)
  (end dc))
